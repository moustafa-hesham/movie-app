{"ast":null,"code":"var _jsxFileName = \"/Users/moustafahesham/Documents/Development/1-Front End/React/index academy/movie-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { Container } from 'react-bootstrap';\nimport CustomNavBar from './Components/CustomNavBar';\nimport MovieList from './Components/MovieList';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport MovieDetails from './Components/MovieDetails';\nimport { useDispatch } from 'react-redux';\nimport { getAllMovie } from './Redux/actions/movieAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\n  const apiKey = '2b8f14d4791f77283418b48f364c8d11';\n  const [pageCount, setPageCount] = useState(0);\n  const dispatch = useDispatch();\n\n  //Get all movies by axois\n  async function getAllMovies() {\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`);\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  }\n  //Get Current Page\n  async function getCurrentPage(page) {\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}`);\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  }\n  useEffect(() => {\n    getAllMovies();\n    dispatch(getAllMovie());\n  }, []);\n\n  //to search in API\n  async function filmSearch(word) {\n    if (word === '') {\n      getAllMovies();\n    } else {\n      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${word}`);\n      setMovies(res.data.results);\n      setPageCount(res.data.total_pages);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-body\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavBar, {\n      search: filmSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MovieList, {\n              moviesData: movies,\n              page: getCurrentPage,\n              pageCount: pageCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:id\",\n            element: /*#__PURE__*/_jsxDEV(MovieDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cwiqxJvMO7rUIESGbyaCmwV0i0Y=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","CustomNavBar","MovieList","axios","useEffect","useState","BrowserRouter","Route","Routes","MovieDetails","useDispatch","getAllMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","baseURL","apiKey","pageCount","setPageCount","dispatch","getAllMovies","res","get","data","results","total_pages","getCurrentPage","page","filmSearch","word","className","children","search","fileName","_jsxFileName","lineNumber","columnNumber","path","element","moviesData","_c","$RefreshReg$"],"sources":["/Users/moustafahesham/Documents/Development/1-Front End/React/index academy/movie-app/src/App.js"],"sourcesContent":["import { Container } from 'react-bootstrap';\nimport CustomNavBar from './Components/CustomNavBar';\nimport MovieList from './Components/MovieList';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport MovieDetails from './Components/MovieDetails';\nimport { useDispatch } from 'react-redux';\nimport { getAllMovie } from './Redux/actions/movieAction';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const baseURL = 'https://api.themoviedb.org/3/movie/';\n  const apiKey = '2b8f14d4791f77283418b48f364c8d11';\n  const [pageCount, setPageCount] = useState(0);\n\n  const dispatch = useDispatch();\n\n  //Get all movies by axois\n  async function getAllMovies() {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n    );\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  }\n  //Get Current Page\n  async function getCurrentPage(page) {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}`\n    );\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  }\n\n  useEffect(() => {\n    getAllMovies();\n    dispatch(getAllMovie());\n  }, []);\n\n  //to search in API\n  async function filmSearch(word) {\n    if (word === '') {\n      getAllMovies();\n    } else {\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${word}`\n      );\n      setMovies(res.data.results);\n      setPageCount(res.data.total_pages);\n    }\n  }\n  return (\n    <div className=\"color-body\">\n      <CustomNavBar search={filmSearch} />\n      <Container>\n        <BrowserRouter>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <MovieList\n                  moviesData={movies}\n                  page={getCurrentPage}\n                  pageCount={pageCount}\n                />\n              }\n            />\n            <Route path=\"/movie/:id\" element={<MovieDetails />} />\n          </Routes>\n        </BrowserRouter>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}